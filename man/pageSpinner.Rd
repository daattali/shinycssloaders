% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pageSpinner.R
\name{pageSpinner}
\alias{pageSpinner}
\title{Add a full-page spinner that covers the entire page}
\usage{
pageSpinner(
  type = 8,
  background = "#FFFFFF",
  color = "#222222",
  size = 1,
  color.background = NULL,
  custom.css = FALSE,
  image = NULL,
  image.width = NULL,
  image.height = NULL,
  caption = NULL
)
}
\arguments{
\item{type}{The type of spinner to use. Valid values are integers between 0-8 (0 means no spinner). Check out
\url{https://daattali.com/shiny/shinycssloaders-demo} to see the different types of spinners.
You can also use your own custom image using the \code{image} parameter.}

\item{background}{Background color for the spinner. You can use semi-transparent colours
in order to have the Shiny app visible in the background, eg. \code{"#222222AA"} or \code{"rgba(150, 20, 70, 0.8)"}.}

\item{color}{The color of the spinner in hex format. Ignored if \code{image} is used.}

\item{size}{The size of the spinner, relative to its default size (default is 1, a size of 2 means twice as large).
Ignored if \code{image} is used.}

\item{color.background}{For certain spinners (type 2-3), you will need to specify the background color of the spinner.
Ignored if \code{image} is used.}

\item{custom.css}{Set to \code{TRUE} if you have your own custom CSS that you defined and you don't want the automatic CSS applied to the spinner.
Ignored if \code{image} is used.}

\item{image}{The path or URL of the image to use if you want to use a custom image instead of a built-in spinner.}

\item{image.width}{The width for the custom image spinner, in pixels. If not provided, then the original
size of the image is used. Ignored if not using \code{image}.}

\item{image.height}{The height for the custom image spinner, in pixels. If not provided, then the original
size of the image is used. Ignored if not using \code{image}.}
\item{caption}{Caption to display below the spinner or image (text or HTML). Ignored if \code{type} is 1.}
}
\description{
This function must be called in a Shiny app's UI to create a full-page spinner. The spinner
will be centered on the page. In the server, you can call \code{\link[=showPageSpinner]{showPageSpinner()}} and \code{\link[=hidePageSpinner]{hidePageSpinner()}}
to show/hide this spinner.
}
\examples{
if (interactive()) {
  library(shiny)

  #--- Example 1: Using showPageSpinner/hidePageSpinner ---

  ui <- fluidPage(
    pageSpinner(),
    actionButton("go", "Go"),
    plotOutput("plot")
  )
  server <- function(input, output) {
    observeEvent(input$go, {
      showPageSpinner()
      Sys.sleep(1)
      hidePageSpinner()
    })
    output$plot <- renderPlot({
     plot(runif(10))
    })
  }
  shinyApp(ui, server)

  #--- Example 2: Using showPageSpinner with expr ---

  some_slow_function <- function() {
    Sys.sleep(1)
  }

  ui <- fluidPage(
    pageSpinner(),
    actionButton("go", "Go"),
    plotOutput("plot")
  )
  server <- function(input, output) {
    observeEvent(input$go, {
      showPageSpinner({ some_slow_function() })
    })
    output$plot <- renderPlot({
     plot(runif(10))
    })
  }
  shinyApp(ui, server)
}
}
\seealso{
\code{\link[=showPageSpinner]{showPageSpinner()}}, \code{\link[=hidePageSpinner]{hidePageSpinner()}}, \code{\link[=withSpinner]{withSpinner()}}
}
